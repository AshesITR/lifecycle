% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verbosity.R
\name{scoped_lifecycle_silence}
\alias{scoped_lifecycle_silence}
\alias{with_lifecycle_silence}
\alias{scoped_lifecycle_warnings}
\alias{with_lifecycle_warnings}
\alias{scoped_lifecycle_errors}
\alias{with_lifecycle_errors}
\title{Control the verbosity of deprecation signals}
\usage{
scoped_lifecycle_silence(frame = caller_env())

with_lifecycle_silence(expr)

scoped_lifecycle_warnings(frame = caller_env())

with_lifecycle_warnings(expr)

scoped_lifecycle_errors(frame = caller_env())

with_lifecycle_errors(expr)
}
\arguments{
\item{frame}{For \code{scoped_} functions, the frame environment whose
lifetime determines the duration of the verbosity settings.}

\item{expr}{For \code{with_} functions, an expression to evaluate with
the verbosity settings.}
}
\description{
There are 3 levels of verbosity for deprecated functions: silence,
warning, and error. Which level of verbosity is applicable when you
call a deprecated function depends on its lifecycle status, on the
context of the caller, and on the state of the session. If you need
to enforce a verbosity level for testing or debugging purposes,
use one of the \code{with_} and \code{scoped_} functions.
\itemize{
\item \code{with_} helpers enforce a verbosity level during the evaluation
of an expression.
\item \code{scoped_} helpers enforce a verbosity level for the duration of
the enclosing scope.
}
}
\examples{
if (rlang::is_installed("testthat")) {
  library(testthat)

  mytool <- function() {
    signal_soft_deprecated("1.0.0", "mytool()")
    10 * 10
  }

  # Forcing the verbosity level is useful for unit testing. You can
  # force errors to test that the function is indeed deprecated:
  test_that("mytool is deprecated", {
    scoped_lifecycle_errors()
    expect_error(mytool(), class = "defunctError")
  })

  # Or you can enforce silence to safely test that the function
  # still works:
  test_that("mytool still works", {
    scoped_lifecycle_silence()
    expect_equal(mytool(), 100)
  })
}

}
