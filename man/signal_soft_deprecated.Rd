% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signal.R
\name{signal_soft_deprecated}
\alias{signal_soft_deprecated}
\alias{warn_deprecated}
\alias{stop_defunct}
\title{Signal deprecation}
\usage{
signal_soft_deprecated(msg, id = msg, env = caller_env(2))

warn_deprecated(msg, id = msg)

stop_defunct(msg)
}
\arguments{
\item{msg}{The deprecation message.}

\item{id}{The id of the deprecation. A warning is issued only once
for each \code{id}. Defaults to \code{msg}, but you should give a unique ID
when the message is built programmatically and depends on inputs.}

\item{env}{The environment in which the soft-deprecated function
was called. A warning is issued if called from the global
environment. If testthat is running, a warning is also called if
the retired function was called from the package being tested.}
}
\description{
These functions provide two levels of verbosity for deprecation
warnings.
\itemize{
\item \code{signal_soft_deprecated()} warns only if called from the global
environment (so the user can change their script) or from the
package currently being tested (so the package developer can fix
the package).
\item \code{warn_deprecated()} warns unconditionally.
\item \code{stop_defunct()} fails unconditionally.
}

Both functions warn only once per session by default to avoid
overwhelming the user with repeated warnings.
}
\section{Controlling verbosity}{


The verbosity of retirement warnings can be controlled with global
options. You'll generally want to set these options locally with
one of these helpers:
\itemize{
\item \code{with_lifecycle_silence()} disables all soft-deprecation and
deprecation warnings.
\item \code{with_lifecycle_warnings()} enforces warnings for both
soft-deprecated and deprecated functions. The warnings are
repeated rather than signalled once per session.
\item \code{with_lifecycle_errors()} enforces errors for both
soft-deprecated and deprecated functions.
}

All the \code{with_} helpers have \code{scoped_} variants that are
particularly useful in testthat blocks.
}

\seealso{
\code{\link[=lifecycle]{lifecycle()}}
}
